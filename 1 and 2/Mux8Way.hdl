// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way {
    IN a,b,c,d,e,f,g,h,
       fsel[3];
    OUT out;

    PARTS:
    // Put your code here:
	Not(in = fsel[0], out = nsel2);
	Not(in = fsel[1], out = nsel1);
	Not(in = fsel[2], out = nsel0);
	
	And(a = nsel0, b = nsel1, out = t1);
	And(a = t1, b = nsel2, out = t2);
	And(a = t2, b = a, out = tm1);
	
	And(a = nsel0, b = nsel1, out = t3);
	And(a = t3, b = fsel[0], out = t4);
	And(a = t4, b = b, out = tm2);
	
	And(a = nsel0, b = fsel[1], out = t5);
	And(a = t5, b = nsel2, out = t6);
	And(a = t6, b = c, out = tm3);
	
	And(a = nsel0, b = fsel[1], out = t7);
	And(a = t7, b = fsel[0], out = t8);
	And(a = t8, b = d, out = tm4);
	
	And(a = fsel[2], b = nsel1, out = t9);
	And(a = t9, b = nsel2, out = t10);
	And(a = t10, b = e, out = tm5);
	
	And(a = fsel[2], b = nsel1, out = t11);
	And(a = t11, b = fsel[0], out = t12);
	And(a = t12, b = f, out = tm6);
	
	And(a = fsel[2], b = fsel[1], out = t13);
	And(a = t13, b = nsel2, out = t14);
	And(a = t14, b = g, out = tm7);
	
	And(a = fsel[2], b = fsel[1], out = t15);
	And(a = t15, b = fsel[0], out = t16);
	And(a = t16, b = h, out = tm8);
	
	Or8Way(in[0] = tm1, in[1] = tm2, in[2] = tm3, in[3] = tm4, in[4] = tm5, in[5] = tm6, in[6] = tm7, in[7] = tm8, out = out );
/**	
	Or(a = tm1, b = tm2, out = to1);
	Or(a = to1, b = tm3, out = to2);
	Or(a = to2, b = tm4, out = to3);
	Or(a = to3, b = tm5, out = to4);
	Or(a = to4, b = tm6, out = to5);
	Or(a = to5, b = tm7, out = to6);
	Or(a = to6, b = tm8, out = out);
	*/
	
	
}