// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	
/**
	Not(in = sel[0], out = nsel0);
	Not(in = sel[1], out = nsel1);
	Not(in = sel[2], out = nsel2);
	
	And(a = nsel0, b = nsel1, out = t1);
	And(a = t1, b = nsel2, out = t2);
	And(a = t2, b = in, out = a);
	
	And(a = sel[0], b = nsel1, out = t3);
	And(a = t3, b = nsel2, out = t4);
	And(a = t4, b = in, out = b);
	
	And(a = nsel0, b = sel[1], out = t5);
	And(a = t5, b = nsel2, out = t6);
	And(a = t6, b = in, out = c);
	
	And(a = sel[0], b = sel[1], out = t7);
	And(a = t7, b = nsel2, out = t8);
	And(a = t8, b = in, out = d);
	
	And(a = nsel0, b = nsel1, out = t9);
	And(a = t9, b = sel[2], out = t10);
	And(a = t10, b = in, out = e);
	
	And(a = sel[0], b = nsel1, out = t11);
	And(a = t11, b = sel[2], out = t12);
	And(a = t12, b = in, out = f);
	
	And(a = nsel0, b = sel[1], out = t13);
	And(a = t13, b = sel[2], out = t14);
	And(a = t14, b = in, out = g);
	
	And(a = sel[0], b = sel[1], out = t15);
	And(a = t15, b = sel[2], out = t16);
	And(a = t16, b = in, out = h);
*/

	DMux(in = in, sel = sel[2], a = tmp1, b = tmp2);
	DMux4Way(in = tmp1, sel = sel[0..1], a = a, b = b, c = c, d = d);
	DMux4Way(in = tmp2, sel = sel[0..1], a = e, b = f, c = g, d = h);
}